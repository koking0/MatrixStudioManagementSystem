# Generated by Django 2.2.5 on 2020-04-03 01:45

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='部门名称')),
                ('duty', models.TextField(verbose_name='部门职责')),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='菜单名称')),
                ('icon', models.CharField(max_length=32, verbose_name='菜单图标')),
            ],
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='权限名称')),
                ('url', models.CharField(max_length=256, verbose_name='权限URL正则表达式')),
                ('alias', models.CharField(max_length=32, unique=True, verbose_name='权限URL别名')),
                ('icon', models.CharField(max_length=32, verbose_name='权限图标')),
                ('menu', models.ForeignKey(blank=True, help_text='如果为 null 表示该权限不是菜单，否则为二级菜单', null=True, on_delete=django.db.models.deletion.PROTECT, to='RBAC.Menu', verbose_name='所属菜单')),
                ('parentPermission', models.ForeignKey(blank=True, help_text='非菜单权限需要一个二级菜单的父权限做默认展开和选中', null=True, on_delete=django.db.models.deletion.PROTECT, to='RBAC.Permission', verbose_name='父权限')),
            ],
        ),
        migrations.CreateModel(
            name='RbacUserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='用户名')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='名')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='姓')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='邮箱')),
                ('score', models.IntegerField(default=10, verbose_name='积分')),
                ('grade', models.IntegerField(choices=[(1, 'M1'), (2, 'M2'), (3, 'M3'), (4, 'M4'), (5, 'M5')], default=1, verbose_name='等级')),
                ('gender', models.IntegerField(choices=[(1, '男'), (2, '女')], default=1, verbose_name='性别')),
                ('avatar', models.ImageField(default='avatars/default.png', upload_to='avatars/', verbose_name='头像')),
                ('telephone', models.CharField(max_length=11, null=True, unique=True, verbose_name='手机号')),
                ('dateJoined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='加入日期')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RBAC.Department', verbose_name='部门')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='角色名称')),
                ('permissions', models.ManyToManyField(blank=True, to='RBAC.Permission', verbose_name='角色所拥有权限')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='Team名称')),
                ('introduce', models.TextField(verbose_name='Team介绍')),
                ('hasRoles', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RBAC.Role', verbose_name='组内拥有的角色')),
            ],
        ),
        migrations.CreateModel(
            name='ScoreRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(verbose_name='处理分值')),
                ('reason', models.TextField(verbose_name='理由')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='scorePerson', to='RBAC.RbacUserInfo', verbose_name='成员')),
                ('referee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='scoreReferee', to='RBAC.RbacUserInfo', verbose_name='执行人')),
            ],
        ),
        migrations.AddField(
            model_name='rbacuserinfo',
            name='roles',
            field=models.ManyToManyField(blank=True, to='RBAC.Role', verbose_name='拥有的所有角色'),
        ),
        migrations.AddField(
            model_name='rbacuserinfo',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RBAC.Team', verbose_name='组'),
        ),
        migrations.AddField(
            model_name='department',
            name='hasRoles',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RBAC.Role', verbose_name='组内拥有的角色'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=32, verbose_name='主题')),
                ('record', models.CharField(choices=[('check', '全勤'), ('vacate', '请假'), ('late', '迟到'), ('lack', '缺勤')], max_length=64, verbose_name='记录')),
                ('score', models.IntegerField(verbose_name='处理分值')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='执行日期')),
                ('remark', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='person', to='RBAC.RbacUserInfo', verbose_name='成员')),
                ('referee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='referee', to='RBAC.RbacUserInfo', verbose_name='执行人')),
            ],
        ),
    ]
